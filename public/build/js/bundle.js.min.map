{"version":3,"sources":["horas.js","tags.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","e","target","name","horaPrevia","classList","remove","Object","values","includes","buscarEventos","async","url","resultado","fetch","eventos","listadoHoras","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","seleccionarHora","obtenerHorasDisponibles","json","id","horaSeleccionada","onclick","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","textContent","tag","etiqueta","createElement","ondblclick","eliminarTag","appendChild","actualizarInputHidden","toString","split","keyCode","trim","preventDefault","getElementById","event"],"mappings":"CAmFA,WAGA,GAFAA,SAAAC,cAAA,UAEA,CACA,MAAAC,EAAAF,SAAAC,cAAA,yBACAE,EAAAH,SAAAI,iBAAA,gBACAC,EAAAL,SAAAC,cAAA,mBACAK,EAAAN,SAAAC,cAAA,oBAEAC,EAAAK,iBAAA,SAAAC,GACAL,EAAAM,QAAAC,GAAAA,EAAAH,iBAAA,SAAAC,IAGA,IAAAG,EAAA,CACAC,cAAAV,EAAAW,OAAA,GACAH,KAAAL,EAAAQ,OAAA,IAmBA,SAAAL,EAAAM,GACAH,EAAAG,EAAAC,OAAAC,MAAAF,EAAAC,OAAAF,MAGAP,EAAAO,MAAA,GACAR,EAAAQ,MAAA,GAEA,MAAAI,EAAAjB,SAAAC,cAAA,8BACAgB,GACAA,EAAAC,UAAAC,OAAA,6BAGAC,OAAAC,OAAAV,GAAAW,SAAA,KAIAC,IAGAC,eAAAD,IACA,MAAAb,IAAAA,EAAAE,aAAAA,GAAAD,EACAc,EAAA,+BAAAf,kBAAAE,IAEAc,QAAAC,MAAAF,IAKA,SAAAG,GAEA,MAAAC,EAAA7B,SAAAI,iBAAA,aACAyB,EAAApB,QAAAqB,GAAAA,EAAAZ,UAAAa,IAAA,+BAGA,MAAAC,EAAAJ,EAAAK,IAAAC,GAAAA,EAAAC,SACAC,EAAAC,MAAAC,KAAAT,GAEAO,EAAAG,OAAAT,IAAAE,EAAAV,SAAAQ,EAAAU,QAAAC,SACAhC,QAAAqB,GAAAA,EAAAZ,UAAAC,OAAA,+BAEAnB,SAAAI,iBAAA,8CACAK,QAAAiC,GAAAA,EAAAnC,iBAAA,QAAAoC,IAhBAC,OADAlB,EAAAmB,QAoBA,SAAAF,EAAA7B,GAEA,MAAAG,EAAAjB,SAAAC,cAAA,8BACAgB,GACAA,EAAAC,UAAAC,OAAA,6BAIAL,EAAAC,OAAAG,UAAAa,IAAA,6BAEAzB,EAAAO,MAAAC,EAAAC,OAAAyB,QAAAC,OAGApC,EAAAQ,MAAAb,SAAAC,cAAA,wBAAAY,MAxEAO,OAAAC,OAAAV,GAAAW,SAAA,KACA,iBACAC,IAEA,MAAAuB,EAAAxC,EAAAO,MAGAkC,EAAA/C,SAAAC,cAAA,kBAAA6C,OACAC,EAAA7B,UAAAC,OAAA,8BACA4B,EAAA7B,UAAAa,IAAA,6BAEAgB,EAAAC,QAAAL,GAVA,IApBA,GCnFA,WACA,MAAAM,EAAAjD,SAAAC,cAAA,eAEA,GAAAgD,EAAA,CACA,MAAAC,EAAAlD,SAAAC,cAAA,SACAkD,EAAAnD,SAAAC,cAAA,iBAEA,IAAAmD,EAAA,GAyBA,SAAAC,IACAH,EAAAI,YAAA,GAEAF,EAAA3C,QAAA8C,IACA,MAAAC,EAAAxD,SAAAyD,cAAA,MACAD,EAAAtC,UAAAa,IAAA,mBACAyB,EAAAF,YAAAC,EACAC,EAAAE,WAAAC,EACAT,EAAAU,YAAAJ,KAEAK,IAEA,SAAAF,EAAA7C,GACAA,EAAAC,OAAAI,SACAiC,EAAAA,EAAAb,OAAAgB,GAAAA,IAAAzC,EAAAC,OAAAuC,aACAO,IAEA,SAAAA,IACAV,EAAAtC,MAAAuC,EAAAU,WAxCA,KAAAX,EAAAtC,QACAuC,EAAAD,EAAAtC,MAAAkD,MAAA,KACAV,KAIAJ,EAAA1C,iBAAA,YAEA,SAAAO,GACA,GAAA,KAAAA,EAAAkD,QAAA,CACA,GAAA,KAAAlD,EAAAC,OAAAF,MAAAoD,QAAAnD,EAAAC,OAAAF,MAAA,EACA,OAGAC,EAAAoD,iBACAd,EAAA,IAAAA,EAAAtC,EAAAC,OAAAF,MAAAoD,QACAhB,EAAApC,MAAA,GAEAwC,SA5BA,GAwDArD,SACAmE,eAAA,cACA5D,iBAAA,WAAA,SAAA6D,GAEA,KAAAA,EAAAJ,SAEAI,EAAAF","file":"bundle.js","sourcesContent":["/* (function() {\r\n    const horas = document.querySelector('#horas');\r\n\r\n    if (horas) {\r\n        let busqueda = {\r\n            categoria_id: '',\r\n            dia: ''\r\n        }\r\n\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]')\r\n        const dias = document.querySelectorAll('[name=\"dia\"]');\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n        \r\n        categoria.addEventListener('change', terminoBusqueda);\r\n        dias.forEach(dia => dia.addEventListener('change', terminoBusqueda));\r\n\r\n        function terminoBusqueda(e) {\r\n            busqueda[e.target.name] = e.target.value;\r\n\r\n            // Reiniciar campos ocultos y selector de Hora\r\n            inputHiddenHora.value = '';\r\n            inputHiddenDia.value = '';\r\n            \r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada')\r\n            if (horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada')\r\n            }\r\n\r\n            if (Object.values(busqueda).includes('')) {\r\n                return;\r\n            }\r\n\r\n            buscarEventos();\r\n        }\r\n\r\n        async function buscarEventos() {\r\n\r\n            const { dia, categoria_id } = busqueda;\r\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n\r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n            obtenerHorasDisponibles(eventos);\r\n        }\r\n\r\n        function obtenerHorasDisponibles(eventos) {\r\n            // Reiniciar las horas\r\n            const listadoHoras = document.querySelectorAll('#horas li');\r\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'));\r\n\r\n            // Comprobar eventos ya tomados, y quitar la variable de deshabilitado\r\n            const horasTomadas = eventos.map( evento => evento.hora_id );\r\n            \r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n            \r\n            const resultado = listadoHorasArray.filter(li => !horasTomadas.includes(li.dataset.horaId));\r\n            resultado.forEach( li => li.classList.remove('horas__hora--deshabilitada'))\r\n            \r\n\r\n            const obtenerHorasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\r\n            obtenerHorasDisponibles.forEach(hora => hora.addEventListener('click', seleccionarHora));\r\n\r\n        }\r\n\r\n        function seleccionarHora(e) {\r\n            // Dehabilitar la hora previa si hay un nuevo click\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada')\r\n            if (horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada')\r\n            }\r\n\r\n            // Agregar clase de seleccionado\r\n            e.target.classList.add('horas__hora--seleccionada');\r\n\r\n            inputHiddenHora.value = e.target.dataset.horaId;\r\n\r\n            // Llenar el campo oculto de dia\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n        }\r\n    }\r\n})(); */\r\n\r\n(function(){\r\n    const horas = document.querySelector('#horas')\r\n\r\n    if(horas) {\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]')\r\n        const dias = document.querySelectorAll('[name=\"dia\"]');\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n\r\n        categoria.addEventListener('change', terminoBusqueda)\r\n        dias.forEach( dia => dia.addEventListener('change', terminoBusqueda))\r\n\r\n\r\n        let busqueda = {\r\n            categoria_id: +categoria.value || '',\r\n            dia: +inputHiddenDia.value || ''\r\n        }\r\n\r\n                \r\n        if(!Object.values(busqueda).includes('')) {\r\n            (async () => {\r\n                await buscarEventos();\r\n\r\n                const id = inputHiddenHora.value;\r\n\r\n                // Resaltar la hora actual\r\n                const horaSeleccionada = document.querySelector(`[data-hora-id=\"${id}\"]`)\r\n                horaSeleccionada.classList.remove('horas__hora--deshabilitada')\r\n                horaSeleccionada.classList.add('horas__hora--seleccionada')\r\n\r\n                horaSeleccionada.onclick = seleccionarHora;\r\n            })()\r\n        }\r\n\r\n        function terminoBusqueda(e) {\r\n            busqueda[e.target.name] = e.target.value;\r\n\r\n            // Reiniciar los campos ocultos y el selector de horas\r\n            inputHiddenHora.value = '';\r\n            inputHiddenDia.value = '';\r\n            \r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada')\r\n            if(horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada')\r\n            }\r\n\r\n            if(Object.values(busqueda).includes('')) {\r\n                return\r\n            }\r\n\r\n            buscarEventos();\r\n        }\r\n\r\n        async function buscarEventos() {\r\n            const { dia, categoria_id } = busqueda\r\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n\r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n            obtenerHorasDisponibles(eventos);\r\n        }\r\n\r\n        function obtenerHorasDisponibles(eventos) {\r\n            // Reiniciar las horas\r\n            const listadoHoras = document.querySelectorAll('#horas li');\r\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'))\r\n\r\n            // Comprobar eventos ya tomados, y quitar la variable de deshabilitado\r\n            const horasTomadas = eventos.map( evento => evento.hora_id);            \r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n\r\n            const resultado = listadoHorasArray.filter( li =>  !horasTomadas.includes(li.dataset.horaId) );\r\n            resultado.forEach( li => li.classList.remove('horas__hora--deshabilitada'))\r\n\r\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\r\n            horasDisponibles.forEach( hora => hora.addEventListener('click', seleccionarHora));\r\n        }\r\n\r\n        function seleccionarHora(e) {\r\n            // Deshabilitar la hora previa, si hay un nuevo click\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada')\r\n            if(horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada')\r\n            }\r\n\r\n            // Agregar clase de seleccionado\r\n            e.target.classList.add('horas__hora--seleccionada')\r\n\r\n            inputHiddenHora.value = e.target.dataset.horaId\r\n\r\n            // Llenar el campo oculto de dia\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value\r\n        }\r\n    }\r\n    \r\n})();","(function () {\r\n  const tagsInput = document.querySelector(\"#tags_input\");\r\n\r\n  if (tagsInput) {\r\n    const tagsDiv = document.querySelector(\"#tags\");\r\n    const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n    let tags = [];\r\n\r\n    // Recuperar del Input Oculto\r\n    if (tagsInputHidden.value !== '') {\r\n      tags = tagsInputHidden.value.split(',');\r\n      mostrarTags();\r\n    }\r\n\r\n    // Escuchar los cambios en el input\r\n    tagsInput.addEventListener(\"keypress\", guardarTag);\r\n\r\n    function guardarTag(e) {\r\n      if (e.keyCode === 44) {\r\n        if (e.target.value.trim() === \"\" || e.target.value < 1) {\r\n          return;\r\n        }\r\n\r\n        e.preventDefault();\r\n        tags = [...tags, e.target.value.trim()];\r\n        tagsInput.value = \"\";\r\n\r\n        mostrarTags();\r\n      }\r\n    }\r\n\r\n    function mostrarTags(){\r\n        tagsDiv.textContent = '';\r\n\r\n        tags.forEach((tag) => {\r\n            const etiqueta = document.createElement(\"LI\");\r\n            etiqueta.classList.add('formulario__tag');\r\n            etiqueta.textContent = tag;\r\n            etiqueta.ondblclick = eliminarTag;\r\n            tagsDiv.appendChild(etiqueta);\r\n        });\r\n        actualizarInputHidden();\r\n    }\r\n    function eliminarTag(e){\r\n        e.target.remove();\r\n        tags = tags.filter(tag => tag !== e.target.textContent);\r\n        actualizarInputHidden();\r\n    }\r\n    function actualizarInputHidden(){\r\n        tagsInputHidden.value = tags.toString();\r\n    }\r\n\r\n  }\r\n})();\r\n\r\ndocument\r\n  .getElementById(\"tags_input\")\r\n  .addEventListener(\"keydown\", function (event) {\r\n    // Verificar si la tecla presionada es la tecla de espacio\r\n    if (event.keyCode === 32) {\r\n      // Prevenir el comportamiento predeterminado (es decir, evitar que se ingrese el espacio)\r\n      event.preventDefault();\r\n    }\r\n  });\r\n"]}